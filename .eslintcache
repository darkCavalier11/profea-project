[{"/home/sumit/Desktop/projects/profrea/src/index.js":"1","/home/sumit/Desktop/projects/profrea/src/StateProvider.js":"2","/home/sumit/Desktop/projects/profrea/src/App.js":"3","/home/sumit/Desktop/projects/profrea/src/reducer.js":"4"},{"size":386,"mtime":1616604021470,"results":"5","hashOfConfig":"6"},{"size":466,"mtime":1616604021470,"results":"7","hashOfConfig":"6"},{"size":10936,"mtime":1618040894053,"results":"8","hashOfConfig":"6"},{"size":278,"mtime":1616604021470,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187mtn3",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sumit/Desktop/projects/profrea/src/index.js",[],"/home/sumit/Desktop/projects/profrea/src/StateProvider.js",[],"/home/sumit/Desktop/projects/profrea/src/App.js",["19","20"],"import \"./App.css\";\nimport { useState } from \"react\";\nimport { BiMailSend, BiPhoneCall } from \"react-icons/bi\";\nimport { FaWhatsapp } from \"react-icons/fa\";\nimport AvatarEditor from \"react-avatar-editor\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [brief, setbrief] = useState(\"\");\n    const [edu, setEdu] = useState(\"\");\n    const [services, setServices] = useState([]);\n    const [slots, setSlots] = useState([]);\n    const [test, setTest] = useState([]);\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [whatsApp, setWhatsApp] = useState(\"\");\n    const [image, setImage] = useState(\n        \"https://www.flaticon.com/svg/vstatic/svg/727/727399.svg?token=exp=1618040792~hmac=e72929db5b0ac26610dc808cd49ef166\"\n    );\n\n    return (\n        <div className=\"app\">\n            <a href=\"#app-preview\" className=\"preview-btn\">\n                {\" \"}\n                preview &#8595;{\" \"}\n            </a>\n            <a\n                href=\"#app-details\"\n                className={window.innerWidth < 1200 ? \"detail-btn\" : \"hide\"}\n            >\n                Top &#8593;\n            </a>\n            <form className=\"app-details\" id=\"app-details\">\n                <span>Name</span>\n                <div className=\"name-cont\">\n                    <input\n                        autoComplete=\"none\"\n                        onChange={(e) => {\n                            setName(e.target.value);\n                        }}\n                    ></input>\n                </div>\n                <span>Brief Description</span>\n                <div className=\"brief-cont\">\n                    <textarea\n                        onChange={(e) => {\n                            setbrief(e.target.value);\n                        }}\n                    ></textarea>\n                </div>\n                <div className=\"image-cont\">\n                    <span>Upload an Image</span>\n                    <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"image-upload\"\n                        onChange={(e) => {\n                            setImage(\n                                window.URL.createObjectURL(e.target.files[0])\n                            );\n                        }}\n                    ></input>\n                    <label htmlFor=\"image-upload\" className=\"upload-label\">\n                        Upload\n                    </label>\n                </div>\n                <span>Email</span>\n                <div className=\"email-cont\">\n                    <input\n                        type=\"email\"\n                        autoComplete=\"none\"\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    ></input>\n                </div>\n                <span>Phone</span>\n                <div className=\"phone-cont\">\n                    <input\n                        type=\"phone\"\n                        autoComplete=\"none\"\n                        onChange={(e) => {\n                            setPhone(e.target.value);\n                        }}\n                    ></input>\n                </div>\n                <div className=\"service-cont\">\n                    <span>Service Offered</span>\n                    <select\n                        onClick={(e) => {\n                            if (services.indexOf(e.target.value) === -1)\n                                setServices([...services, e.target.value]);\n                        }}\n                    >\n                        <option>Option 1</option>\n                        <option>Option 2</option>\n                        <option>Option 3</option>\n                        <option>Option 4</option>\n                    </select>\n                    <div className=\"curr-serv\">\n                        {services.map((item, idx) => (\n                            <div key={idx} className=\"serv-item\" id={item}>\n                                {item}{\" \"}\n                                <p\n                                    className=\"del\"\n                                    onClick={(e) => {\n                                        let ser =\n                                            e.currentTarget.parentElement.id;\n                                        let currServ = [];\n                                        for (\n                                            let i = 0;\n                                            i < services.length;\n                                            i++\n                                        ) {\n                                            if (services[i] === ser) {\n                                                continue;\n                                            }\n                                            currServ.push(services[i]);\n                                        }\n                                        setServices(currServ);\n                                    }}\n                                >\n                                    x\n                                </p>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <span>Educational Background</span>\n                <div className=\"edu-cont\">\n                    <textarea\n                        onChange={(e) => {\n                            setEdu(e.target.value);\n                        }}\n                    ></textarea>\n                </div>\n                <div className=\"time-cont\">\n                    <span>from</span>\n                    <input type=\"time\" className=\"time-from\"></input>\n                    <span>to</span>\n                    <input type=\"time\" className=\"time-to\"></input>\n                    <a\n                        href=\"#\"\n                        className=\"time-btn\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            const from = document.querySelector(\".time-from\")\n                                .value;\n                            const to = document.querySelector(\".time-to\").value;\n                            if (!from) alert(\"Please Specify from time\");\n                            if (!to) alert(\"Please specify to time\");\n                            if (to && from) {\n                                let timeslot = from + \" - \" + to;\n                                setSlots([...slots, timeslot]);\n                                document.querySelector(\n                                    \".time-from\"\n                                ).value = null;\n                                document.querySelector(\".time-to\").value = null;\n                            }\n                        }}\n                    >\n                        Add Timeslot\n                    </a>\n                </div>\n                <div className=\"time-slot\">\n                    {slots.map((item, idx) => (\n                        <div key={idx} className=\"slot-item\" id={item}>\n                            {item}{\" \"}\n                            <p\n                                className=\"del\"\n                                onClick={(e) => {\n                                    let slot = e.currentTarget.parentElement.id;\n                                    let currSlots = [];\n                                    for (let i = 0; i < slots.length; i++) {\n                                        if (slots[i] === slot) {\n                                            continue;\n                                        }\n                                        currSlots.push(slots[i]);\n                                    }\n                                    setSlots(currSlots);\n                                }}\n                            >\n                                x\n                            </p>\n                        </div>\n                    ))}\n                </div>\n                <span>WhatsApp</span>\n                <div className=\"wp-cont\">\n                    <input\n                        type=\"phone\"\n                        onChange={(e) => {\n                            setWhatsApp(e.target.value);\n                        }}\n                    ></input>\n                </div>\n                <span>Testimonials</span>\n                <div className=\"test-cont\">\n                    <textarea className=\"test-text\"></textarea>\n                    <a\n                        href=\"#\"\n                        className=\"test-btn\"\n                        onClick={(e) => {\n                            e.preventDefault();\n                            let testimonial = document.querySelector(\n                                \".test-text\"\n                            );\n                            if (testimonial.value) {\n                                setTest([...test, testimonial.value]);\n                                testimonial.value = \"\";\n                            }\n                        }}\n                    >\n                        Add Testimonial\n                    </a>\n                </div>\n            </form>\n\n            <div className=\"app-preview\" id=\"app-preview\">\n                <AvatarEditor\n                    className=\"preview-img\"\n                    image={image}\n                    width={300}\n                    height={300}\n                    border={50}\n                    borderRadius={250}\n                ></AvatarEditor>\n                <h1>About</h1>\n                <div className=\"preview-name\">Dr {name}</div>\n                <div className=\"preview-brief\">Brief </div>\n                <div className=\"brief-show\">{brief}</div>\n                <div className=\"edu\">Educational Background</div>\n                <p className=\"edu-show\">{edu}</p> <h1>Services</h1>\n                <div className=\"services\">\n                    {services.map((item, idx) => {\n                        return <p key={idx}>{item}</p>;\n                    })}\n                </div>\n                <h1>Time slots</h1>\n                <div className=\"avail\">\n                    {slots.map((item, idx) => {\n                        return <p key={idx}>{item}</p>;\n                    })}\n                </div>\n                <h1>Testimonials</h1>\n                <div className=\"testimonial\">\n                    {test.map((item, idx) => {\n                        return <div key={idx}>{item}</div>;\n                    })}\n                </div>\n                <div className=\"contact\">\n                    <BiMailSend color=\"white\" className=\"svg-icon\" />\n                    {email}\n                    <BiPhoneCall color=\"white\" className=\"svg-icon\" />\n                    {phone}\n                    <FaWhatsapp color=\"white\" className=\"svg-icon\" />\n                    {whatsApp}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/home/sumit/Desktop/projects/profrea/src/reducer.js",[],{"ruleId":"21","severity":1,"message":"22","line":142,"column":21,"nodeType":"23","endLine":161,"endColumn":22},{"ruleId":"21","severity":1,"message":"22","line":200,"column":21,"nodeType":"23","endLine":213,"endColumn":22},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]